name: Rust

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - 1.52.0  # MSRV
    steps:
      - uses: actions/checkout@v2
      - name: Install minimal stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        name: Build
        with:
          command: build
      - uses: actions-rs/cargo@v1
        name: Run tests
        with:
          command: test
  test-all-features:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - 1.52.0  # MSRV
    steps:
      - uses: actions/checkout@v2
      - name: Install minimal stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        name: Build
        with:
          command: build --all-features
      - uses: actions-rs/cargo@v1
        name: Run tests
        with:
          command: test --all-features
  integration-test:
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: ["23.3", "24.3"]
        elixir: ["1.12.3", "1.13.4"]
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - run: bash ./integration_test.sh
